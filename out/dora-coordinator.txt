2024-08-21T07:04:51.413246Z  INFO spawn_dataflow{dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: Deploy { machine: None }, nodes: [Node { id: NodeId("turtle"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: Some(CustomNode { source: "./random_turtle.py", args: None, envs: None, build: None, send_stdout_as: None, run_config: NodeRunConfig { inputs: {DataId("direction"): Input { mapping: User(UserInputMapping { source: NodeId("control"), output: DataId("direction") }), queue_size: None }}, outputs: {DataId("turtle_pose")} } }), operator: None, path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("control"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: Some(CustomNode { source: "./control_node.py", args: None, envs: None, build: None, send_stdout_as: None, run_config: NodeRunConfig { inputs: {DataId("tick"): Input { mapping: Timer { interval: 500ms }, queue_size: None }, DataId("turtle_pose"): Input { mapping: User(UserInputMapping { source: NodeId("turtle"), output: DataId("turtle_pose") }), queue_size: None }}, outputs: {DataId("direction")} } }), operator: None, path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }] } working_dir="/home/sunny/dora_rviz/python-ros2-dataflow"}: dora_coordinator::run: successfully spawned dataflow `019173c0-a7a0-76a5-a468-def60ae6fd4f`
2024-08-21T07:05:15.047548Z  INFO dora_coordinator: successfully send stop dataflow `019173c0-a7a0-76a5-a468-def60ae6fd4f` to all daemons
2024-08-21T07:05:30.265826Z ERROR dora_coordinator::control: failed to send reply
2024-08-21T07:42:06.881310Z  INFO spawn_dataflow{dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: Deploy { machine: None }, nodes: [Node { id: NodeId("lidar_to_ros2"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("LaserScan"): Input { mapping: Timer { interval: 500ms }, queue_size: None }}, outputs: {}, source: Python(PythonSource { source: "lidar_to_ros2.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }] } working_dir="/home/sunny/dora_rviz/python-ros2-dataflow"}: dora_coordinator::run: successfully spawned dataflow `019173e2-c406-7e86-9434-0020ae4783d5`
2024-08-21T07:43:29.225073Z  INFO spawn_dataflow{dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: Deploy { machine: None }, nodes: [Node { id: NodeId("lidar_to_ros2"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("LaserScan"): Input { mapping: Timer { interval: 500ms }, queue_size: None }}, outputs: {}, source: Python(PythonSource { source: "lidar_to_ros2.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }] } working_dir="/home/sunny/dora_rviz/python-ros2-dataflow"}: dora_coordinator::run: successfully spawned dataflow `019173e4-05c2-780e-9cb4-7c264257615a`
